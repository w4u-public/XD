@charset "UTF-8";
/*!
 * XD.css - https://github.com/w4u-public/XD.css/
 * Version: 1.0a
 * License: MIT
 */
[class*="(`･ω･´)"],
[class*="(´･ω･`)"], [class*="ε=┌"],
[class*="┏("], [class*="(◍´"],
[class*="(﹡"],
[class*="(*"],
[class*="(⸝•"], [class*="(・∀"],
[class*="(・Ａ"],
[class*="(゜Д"],
[class*="(´_"], [class*="(´｡"], [class*="(((＞＜)))"], [class*="(ﾟ∀"],
[class*="(￣("],
[class*="(ง⁎"], [class*="ψ(`"],
[class*="ヾ(`"],
[class*="ヽ(`"], [class*="Σ(ﾟ"],
[class*="(((;"], [class*="(╹◡"],
[class*="(≧ω"],
[class*="(×д"] {
  animation: var(--AN) calc(var(--AS, 1) * var(--AD, .5) * 1s) var(--AE, ease) var(--AC, 1) var(--ADR, normal) var(--ANM, both);
}

[class*="("] {
  --AL: 1;
  --AOXY: 50% 50%;
  --APP: perspective(var(--AP, 500px));
  --Acirc: cubic-bezier(.785, .135, .15, .86);
  --Ain-circ: cubic-bezier(.6, .04, .98, .335);
  --Aout-circ: cubic-bezier(.075, .82, .165, 1);
  --Aexpo: cubic-bezier(1, 0, 0, 1);
  --Ain-expo: cubic-bezier(.95, .05, .795, .035);
  --Aout-expo: cubic-bezier(.19, 1, .22, 1);
  --Aback: cubic-bezier(.68, -.55, .265, 1.55);
  --Ain-back: cubic-bezier(.6, -.28, .735, .045);
  --Aout-back: cubic-bezier(.175, .885, .32, 1.275);
  --ASP0: calc(.3 * var(--AL));
  --ASP1: calc(.25 * var(--AL));
  --ASP2: calc(.15 * var(--AL));
  --ASP3: calc(.13 * var(--AL));
  --ASP4: calc(.08 * var(--AL));
  --ASP5: calc(.06 * var(--AL));
  --ASP6: calc(.04 * var(--AL));
  --ASP7: calc(.03 * var(--AL));
  --ASP8: calc(.02 * var(--AL));
  --ASP9: calc(.01 * var(--AL));
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Keyframes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
@keyframes steps2 {
  0% {
    opacity: var(--AOP0);
    transform-origin: var(--AOXY) var(--AOZ0, 0);
    transform: var(--APP) rotateZ(var(--ARNZ0, 0)) translate(var(--ATX0, 0), var(--ATY0, 0)) scale(var(--ASX0, 1), var(--ASY0, 1)) rotateX(var(--ARX0, 0)) rotateY(var(--ARY0, 0)) rotateZ(var(--ARZ0, 0));
  }
  100% {
    opacity: var(--AOP1);
    transform-origin: var(--AOXY) var(--AOZ10, 0);
    transform: var(--APP) rotateZ(var(--ARNZ1, 0)) translate(var(--ATX1, 0), var(--ATY1, 0)) scale(var(--ASX1, 1), var(--ASY1, 1)) rotateX(var(--ARX1, 0)) rotateY(var(--ARY1, 0)) rotateZ(var(--ARZ1, 0));
  }
}

@keyframes steps10 {
  0% {
    opacity: var(--AOP0);
    transform-origin: var(--AOXY) var(--AOZ0, 0);
    transform: var(--APP) translate(var(--ATX0, 0), var(--ATY0, 0)) scale(var(--ASX0, 1), var(--ASY0, 1)) rotateX(var(--ARX0, 0)) rotateY(var(--ARY0, 0)) rotateZ(var(--ARZ0, 0));
  }
  10% {
    opacity: var(--AOP1);
    transform: var(--APP) translate(var(--ATX1, 0), var(--ATY1, 0)) scale(var(--ASX1, 1), var(--ASY1, 1)) rotateX(var(--ARX1, 0)) rotateY(var(--ARY1, 0)) rotateZ(var(--ARZ1, 0));
  }
  20% {
    transform: var(--APP) translate(var(--ATX2, 0), var(--ATY2, 0)) scale(var(--ASX2, 1), var(--ASY2, 1)) rotateX(var(--ARX2, 0)) rotateY(var(--ARY2, 0)) rotateZ(var(--ARZ2, 0));
  }
  30% {
    transform: var(--APP) translate(var(--ATX3, 0), var(--ATY3, 0)) scale(var(--ASX3, 1), var(--ASY3, 1)) rotateX(var(--ARX3, 0)) rotateY(var(--ARY3, 0)) rotateZ(var(--ARZ3, 0));
  }
  40% {
    transform: var(--APP) translate(var(--ATX4, 0), var(--ATY4, 0)) scale(var(--ASX4, 1), var(--ASY4, 1)) rotateX(var(--ARX4, 0)) rotateY(var(--ARY4, 0)) rotateZ(var(--ARZ4, 0));
  }
  50% {
    transform: var(--APP) translate(var(--ATX5, 0), var(--ATY5, 0)) scale(var(--ASX5, 1), var(--ASY5, 1)) rotateX(var(--ARX5, 0)) rotateY(var(--ARY5, 0)) rotateZ(var(--ARZ5, 0));
  }
  60% {
    transform: var(--APP) translate(var(--ATX6, 0), var(--ATY6, 0)) scale(var(--ASX6, 1), var(--ASY6, 1)) rotateX(var(--ARX6, 0)) rotateY(var(--ARY6, 0)) rotateZ(var(--ARZ6, 0));
  }
  70% {
    transform: var(--APP) translate(var(--ATX7, 0), var(--ATY7, 0)) scale(var(--ASX7, 1), var(--ASY7, 1)) rotateX(var(--ARX7, 0)) rotateY(var(--ARY7, 0)) rotateZ(var(--ARZ7, 0));
  }
  80% {
    transform: var(--APP) translate(var(--ATX8, 0), var(--ATY8, 0)) scale(var(--ASX8, 1), var(--ASY8, 1)) rotateX(var(--ARX8, 0)) rotateY(var(--ARY8, 0)) rotateZ(var(--ARZ8, 0));
  }
  90% {
    transform: var(--APP) translate(var(--ATX9, 0), var(--ATY9, 0)) scale(var(--ASX9, 1), var(--ASY9, 1)) rotateX(var(--ARX9, 0)) rotateY(var(--ARY9, 0)) rotateZ(var(--ARZ9, 0));
  }
  100% {
    transform-origin: var(--AOXY) var(--AOZ10, 0);
    transform: var(--APP) translate(var(--ATX10, 0), var(--ATY10, 0)) scale(var(--ASX10, 1), var(--ASY10, 1)) rotateX(var(--ARX10, 0)) rotateY(var(--ARY10, 0)) rotateZ(var(--ARZ10, 0));
  }
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Fade

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(`･ω･´)"],
[class*="(´･ω･`)"] {
  --AN: steps2;
}

[class*="(`･ω･´)"] {
  --AOP0: 0;
  --AOP1: 1;
}

[class*="(´･ω･`)"] {
  --AOP0: 1;
  --AOP1: 0;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Slide

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="ε=┌"],
[class*="┏("] {
  --AN: steps2;
  --Avsl: calc(-100% * var(--AL));
}

/* X */
[class*="ε=┌(;￣▽￣)┘"] {
  --Avslx: calc(var(--Avsl) * var(--Arsx, 1));
  --ATX0: var(--Avslx);
  --ATX1: 0;
}

/* Invert */
[class*="ε=┌(;￣▽￣)┘°0°)/"] {
  --Arsx: -1;
}

/* Y */
[class*="ε=┌(;￣▽￣)=○"] {
  --Avsly: calc(var(--Avsl) * var(--Arsy, 1));
  --ATY0: var(--Avsly);
  --ATY1: 0;
}

/* Invert */
[class*="ε=┌(;￣▽￣)=○°0°)/"] {
  --Arsy: -1;
}

/*-----------------------
	Out
-----------------------*/
/* X */
[class*="┏(ﾟꇴﾟ;)┛=3"] {
  --ATX0: 0;
  --ATX1: calc(var(--Avsl) * var(--Arsx, 1));
}

/* Invert */
[class*="┏(ﾟꇴﾟ;)┛=3°x°)/"] {
  --Arsx: -1;
}

/* Y */
[class*="┏(ﾟロﾟ;)┛=3=3"] {
  --ATY0: 0;
  --ATY1: calc(var(--Avsl) * var(--Arsy, 1));
}

/* Invert */
[class*="┏(ﾟロﾟ;)┛=3=3°0°)/"] {
  --Arsy: -1;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Rotate

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(◍´"],
[class*="(﹡"],
[class*="(*"],
[class*="(⸝•"] {
  transform-style: preserve-3d;
  --AN: steps2;
  --AD: 1;
}

/* X */
[class*="(◍´x`◍)"] {
  --ARX1: calc(360deg * var(--Arrx, 1));
}

/* Invert */
[class*="(◍´x`◍)ヾ(´∀`*)"] {
  --Arrx: -1;
}

/* Y */
[class*="(◍´-`◍)"] {
  --ARY1: calc(360deg * var(--Arry, 1));
}

/* Invert */
[class*="(◍´-`◍)ヾ(´∀`*)"] {
  --Arry: -1;
}

/* Z */
[class*="(◍´ꇴ`◍)"] {
  --ARZ1: calc(360deg * var(--Arrz, 1));
}

/* Invert */
[class*="(◍´ꇴ`◍)ヾ(´∀`*)"] {
  --Arrz: -1;
}

/*-----------------------
	In
-----------------------*/
/* X */
[class*="(﹡ˆᴗˆ﹡)"] {
  --ARX0: calc(90deg * var(--Arrx, 1));
  --ARX1: 0;
}

/* Invert */
[class*="(﹡ˆᴗˆ﹡)ヾ(´∀`*)"] {
  --Arrx: -1;
}

/* Y */
[class*="(﹡ˆーˆ﹡)"] {
  --ARY0: calc(90deg * var(--Arry, 1));
  --ARY1: 0;
}

/* Invert */
[class*="(﹡ˆーˆ﹡)ヾ(´∀`*)"] {
  --Arry: -1;
}

/* Z */
[class*="(﹡ˆ~ˆ﹡)"] {
  --ARZ0: calc(90deg * var(--Arrz, 1));
  --ARZ1: 0;
}

/* Invert */
[class*="(﹡ˆ~ˆ﹡)ヾ(´∀`*)"] {
  --Arrz: -1;
}

/*-----------------------
	Out
-----------------------*/
/* X */
[class*="(*´▽`*)"] {
  --ARX0: 0;
  --ARX1: 90deg;
}

/* Invert */
[class*="(*´▽`*)ヾ(´∀`*)"] {
  --ARX0: 0;
  --ARX1: -90deg;
}

/* Y */
[class*="(⸝•ᴗ•⸝⸝)"] {
  --ARY0: 0;
  --ARY1: 90deg;
}

/* Invert */
[class*="(⸝•ᴗ•⸝⸝)ヾ(´∀`*)"] {
  --ARY0: 0;
  --ARY1: -90deg;
}

/* Z */
[class*="(⸝•v•⸝⸝)"] {
  --ARZ0: 0;
  --ARZ1: 90deg;
}

/* Invert */
[class*="(⸝•v•⸝⸝)ヾ(´∀`*)"] {
  --ARZ0: 0;
  --ARZ1: -90deg;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Scale

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(・∀"],
[class*="(・Ａ"],
[class*="(゜Д"],
[class*="(´_"] {
  --AN: steps2;
}

/* --------------------
	In
-------------------- */
[class*="(・∀・)☆"] {
  --ASX0: 0;
  --ASY0: 0;
}

/* Invert */
[class*="(・∀・)☆ヾ(´▽`)"] {
  --ASX0: 2;
  --ASY0: 2;
}

/* --------------------
	Out
-------------------- */
[class*="(・∀・)★"] {
  --ASX1: 0;
  --ASY1: 0;
}

/* Invert */
[class*="(・∀・)★ヾ(´▽`)"] {
  --ASX1: 2;
  --ASY1: 2;
}

/* --------------------
	X In
-------------------- */
[class*="(・Ａ・)☆"] {
  --ASX0: 0;
}

/* Invert */
[class*="(・Ａ・)☆ヾ(´▽`)"] {
  --ASX0: 2;
}

/* --------------------
	X Out
-------------------- */
[class*="(・Ａ・)★"] {
  --ASX1: 2;
}

/* Invert */
[class*="(・Ａ・)★ヾ(´▽`)"] {
  --ASX1: 0;
}

/* --------------------
	Y In
-------------------- */
[class*="(゜Д゜)☆"] {
  --ASY0: 0;
}

/* Invert */
[class*="(゜Д゜)☆ヾ(´▽`)"] {
  --ASY0: 2;
}

/* --------------------
	Y Out
-------------------- */
[class*="(´_ゝ｀)★"] {
  --ASY1: 2;
}

/* Invert */
[class*="(´_ゝ｀)★ヾ(´▽`)"] {
  --ASY1: 0;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Spiral

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(´｡"] {
  --AN: steps2;
  --AD: .7;
  --Avspx: calc(100% * var(--AL) * var(--Arsp, 1));
  --Avspd: calc(360deg * var(--AL));
  --Avspdr: calc(var(--Avspd) * -1);
}

/* --------------------
	X
-------------------- */
[class*="(´｡•ω•｡`)♤"] {
  --ATX0: var(--Avspx);
  --ARZ1: var(--Avspdr);
  --ARNZ1: var(--Avspd);
}

/* --------------------
	Y
-------------------- */
[class*="(´｡•ω•｡`)♠"] {
  --ATX1: var(--Avspx);
  --ARZ1: var(--Avspdr);
  --ARNZ1: var(--Avspd);
}

/* --------------------
	Inbert
-------------------- */
[class*="(´｡•ω•｡`)♤('Д゜;)"],
[class*="(´｡•ω•｡`)♠('Д゜;)"] {
  --Arsp: -1;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Vibrate

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(((＞＜)))"] {
  --AN: steps2;
  --Avvbd: calc(360deg * var(--AL) * 6);
  --ATX0: calc(10% * var(--AL));
  --ARZ1: var(--Avvbd);
  --ARNZ1: calc(var(--Avvbd) * -1);
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Perspective

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(ﾟ∀"],
[class*="(￣("],
[class*="(ง⁎"] {
  --AN: steps2;
  --AP: calc(var(--Avpr, 500) * var(--Apvv, 1) * var(--Apru, 1px));
  perspective: var(--AP);
}

/*-----------------------
	In
-----------------------*/
[class*="(ﾟ∀ﾟ)o彡♧"] {
  --AOZ0: 50vw;
}

/* Invert */
[class*="(ﾟ∀ﾟ)o彡♧ヾ(´∀`*)"] {
  --AOZ0: -50vw;
}

/*-----------------------
	Out
-----------------------*/
[class*="(ﾟ∀ﾟ)o彡♣"] {
  --AOZ10: 50vw;
}

/* Invert */
[class*="(ﾟ∀ﾟ)o彡♣ヾ(´∀`*)"] {
  --AOZ10: -50vw;
}

/*-----------------------
	Unit
-----------------------*/
/* Vw */
[class*="(￣(ｴ)￣)ﾉw"] {
  --Avpr: 25;
  --Apru: 1vw;
}

/* Vh */
[class*="(￣(ｴ)￣)ﾉh"] {
  --Avpr: 25;
  --Apru: 1vh;
}

/*-----------------------
	Velocity
-----------------------*/
[class*="(ง⁎˃ᵕ˂)ง⁾⁾r-0"] {
  --Apvv: 0;
}

/* Up */
[class*="(ง⁎˃ᵕ˂)ง⁾⁾r･ﾟﾟ･."] {
  --Apvv: .8;
}

[class*="(ง⁎˃ᵕ˂)ง⁾⁾r･ﾟﾟ･.."] {
  --Apvv: .6;
}

[class*="(ง⁎˃ᵕ˂)ง⁾⁾r･ﾟﾟ･..."] {
  --Apvv: .4;
}

[class*="(ง⁎˃ᵕ˂)ง⁾⁾r･ﾟﾟ･...."] {
  --Apvv: .2;
}

/* Down */
[class*="(ง⁎˃ᵕ˂)ง⁾⁾r┻━┻"] {
  --Apvv: 1.2;
}

[class*="(ง⁎˃ᵕ˂)ง⁾⁾r┻━┻┻━"] {
  --Apvv: 1.4;
}

[class*="(ง⁎˃ᵕ˂)ง⁾⁾r┻━┻┻━┻"] {
  --Apvv: 1.6;
}

[class*="(ง⁎˃ᵕ˂)ง⁾⁾r┻━┻┻━┻┻━"] {
  --Apvv: 1.8;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Bounce

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="ψ(`"],
[class*="ヾ(`"],
[class*="ヽ(`"] {
  --AN: steps10;
  --AD: 1;
}

/* X */
[class*="ψ(`∇´)ψ"],
[class*="ヾ(`ヘ´)ﾉ"] {
  --Arbx: 1;
  --ASX0: calc(1 - var(--ASP0) * var(--Arbx));
  --ASX1: calc(1 + var(--ASP1) * var(--Arbx));
  --ASX2: calc(1 - var(--ASP2) * var(--Arbx));
  --ASX3: calc(1 + var(--ASP3) * var(--Arbx));
  --ASX4: calc(1 - var(--ASP4) * var(--Arbx));
  --ASX5: calc(1 + var(--ASP5) * var(--Arbx));
  --ASX6: calc(1 - var(--ASP6) * var(--Arbx));
  --ASX7: calc(1 + var(--ASP7) * var(--Arbx));
  --ASX8: calc(1 - var(--ASP8) * var(--Arbx));
  --ASX9: calc(1 + var(--ASP9) * var(--Arbx));
}

/* Y */
[class*="ψ(`∇´)ψ"],
[class*="ヽ(`д´*)ノ"] {
  --Arby: 1;
  --ASY0: calc(1 - var(--ASP0) * var(--Arby));
  --ASY1: calc(1 + var(--ASP1) * var(--Arby));
  --ASY2: calc(1 - var(--ASP2) * var(--Arby));
  --ASY3: calc(1 + var(--ASP3) * var(--Arby));
  --ASY4: calc(1 - var(--ASP4) * var(--Arby));
  --ASY5: calc(1 + var(--ASP5) * var(--Arby));
  --ASY6: calc(1 - var(--ASP6) * var(--Arby));
  --ASY7: calc(1 + var(--ASP7) * var(--Arby));
  --ASY8: calc(1 - var(--ASP8) * var(--Arby));
  --ASY9: calc(1 + var(--ASP9) * var(--Arby));
}

/* --------------------
	Invert
-------------------- */
[class*="ψ(`∇´)ψ且"] {
  --Arbx: -1;
  --Arby: -1;
}

/* X */
[class*="ヾ(`ヘ´)ﾉﾞ且"] {
  --Arbx: -1;
}

/* Y */
[class*="ヽ(`д´*)ノ且"] {
  --Arby: -1;
}

/* --------------------
	Multiple
-------------------- */
[class*="ψ(`"][class*="ε=┌"],
[class*="ψ(`"][class*="┏("],
[class*="ヾ(`"][class*="ε=┌"],
[class*="ヾ(`"][class*="┏("],
[class*="ヽ(`"][class*="ε=┌"],
[class*="ヽ(`"][class*="┏("] {
  --ATX0: calc(var(--Avslx) * 2);
  --ATY0: calc(var(--Avsly) * 2);
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Shake

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="Σ(ﾟ"],
[class*="(((;"] {
  --AN: steps10;
  --AD: 1;
}

/* --------------------
	X
-------------------- */
[class*="Σ(ﾟДﾟ;≡;ﾟдﾟ)"] {
  --Arshx: 1;
  --ATX0: calc(100% * var(--ASP0) * var(--Arshx));
  --ATX1: calc(-100% * var(--ASP1) * var(--Arshx));
  --ATX2: calc(100% * var(--ASP2) * var(--Arshx));
  --ATX3: calc(-100% * var(--ASP3) * var(--Arshx));
  --ATX4: calc(100% * var(--ASP4) * var(--Arshx));
  --ATX5: calc(-100% * var(--ASP5) * var(--Arshx));
  --ATX6: calc(100% * var(--ASP6) * var(--Arshx));
  --ATX7: calc(-100% * var(--ASP7) * var(--Arshx));
  --ATX8: calc(100% * var(--ASP8) * var(--Arshx));
  --ATX9: calc(-100% * var(--ASP9) * var(--Arshx));
}

/* Invert */
[class*="Σ(ﾟДﾟ;≡;ﾟдﾟ)ヾ(￣ω￣;)"] {
  --Arshx: -1;
}

/* --------------------
	Y
-------------------- */
[class*="(((;°Д°;))))"] {
  --Arshy: 1;
  --ATY0: calc(100% * var(--ASP0) * var(--Arshy));
  --ATY1: calc(-100% * var(--ASP1) * var(--Arshy));
  --ATY2: calc(100% * var(--ASP2) * var(--Arshy));
  --ATY3: calc(-100% * var(--ASP3) * var(--Arshy));
  --ATY4: calc(100% * var(--ASP4) * var(--Arshy));
  --ATY5: calc(-100% * var(--ASP5) * var(--Arshy));
  --ATY6: calc(100% * var(--ASP6) * var(--Arshy));
  --ATY7: calc(-100% * var(--ASP7) * var(--Arshy));
  --ATY8: calc(100% * var(--ASP8) * var(--Arshy));
  --ATY9: calc(-100% * var(--ASP9) * var(--Arshy));
}

/* Invert */
[class*="(((;°Д°;))))ヾ(￣ω￣;)"] {
  --Arshy: -1;
}

/* --------------------
	Multiple
-------------------- */
[class*="@sh"][class*="@sl"] {
  --ATX0: calc(var(--Avslx) * 2);
  --ATY0: calc(var(--Avsly) * 2);
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	KEY: Flick

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(╹◡"],
[class*="(≧ω"],
[class*="(×д"] {
  transform-style: preserve-3d;
  --AN: steps10;
  --AD: 1.5;
  --Arf: 1;
  --Avad: 0deg;
  /* Spring */
  --Avrs0: calc(-120deg * var(--ASP0) * var(--Arf) + var(--Avad));
  --Avrs1: calc(120deg * var(--ASP1) * var(--Arf) + var(--Avad));
  --Avrs2: calc(-120deg * var(--ASP2) * var(--Arf) + var(--Avad));
  --Avrs3: calc(120deg * var(--ASP3) * var(--Arf) + var(--Avad));
  --Avrs4: calc(-120deg * var(--ASP4) * var(--Arf) + var(--Avad));
  --Avrs5: calc(120deg * var(--ASP5) * var(--Arf) + var(--Avad));
  --Avrs6: calc(-120deg * var(--ASP6) * var(--Arf) + var(--Avad));
  --Avrs7: calc(120deg * var(--ASP7) * var(--Arf) + var(--Avad));
  --Avrs8: calc(-120deg * var(--ASP8) * var(--Arf) + var(--Avad));
  --Avrs9: calc(120deg * var(--ASP9) * var(--Arf) + var(--Avad));
  --Avrs10: calc(0deg + var(--Avad));
}

/* X */
[class*="(╹◡╹)"] {
  --ARX0: var(--Avrs0);
  --ARX1: var(--Avrs1);
  --ARX2: var(--Avrs2);
  --ARX3: var(--Avrs3);
  --ARX4: var(--Avrs4);
  --ARX5: var(--Avrs5);
  --ARX6: var(--Avrs6);
  --ARX7: var(--Avrs7);
  --ARX8: var(--Avrs8);
  --ARX9: var(--Avrs9);
  --ARX10: var(--Avrs10);
}

/* Y */
[class*="(≧ω≦)"] {
  --ARY0: var(--Avrs0);
  --ARY1: var(--Avrs1);
  --ARY2: var(--Avrs2);
  --ARY3: var(--Avrs3);
  --ARY4: var(--Avrs4);
  --ARY5: var(--Avrs5);
  --ARY6: var(--Avrs6);
  --ARY7: var(--Avrs7);
  --ARY8: var(--Avrs8);
  --ARY9: var(--Avrs9);
  --ARY10: var(--Avrs10);
}

/* Z */
[class*="(×д×)"] {
  --ARZ0: var(--Avrs0);
  --ARZ1: var(--Avrs1);
  --ARZ2: var(--Avrs2);
  --ARZ3: var(--Avrs3);
  --ARZ4: var(--Avrs4);
  --ARZ5: var(--Avrs5);
  --ARZ6: var(--Avrs6);
  --ARZ7: var(--Avrs7);
  --ARZ8: var(--Avrs8);
  --ARZ9: var(--Avrs9);
  --ARZ10: var(--Avrs10);
}

/*-----------------------
	Out
-----------------------*/
[class*="(╹◡╹)❤"],
[class*="(≧ω≦)❤"],
[class*="(×д×)❤"] {
  --Avad: 90deg;
}

/*-----------------------
	Invert
-----------------------*/
[class*="(╹◡╹)♡ԅ(￣ε￣ԅ)"],
[class*="(≧ω≦)♡ԅ(￣ε￣ԅ)"],
[class*="(×д×)♡ԅ(￣ε￣ԅ)"],
[class*="(╹◡╹)❤ԅ(￣ε￣ԅ)"],
[class*="(≧ω≦)❤ԅ(￣ε￣ԅ)"],
[class*="(×д×)❤ԅ(￣ε￣ԅ)"] {
  --Arf: -1;
}

[class*="(×д×)❤ԅ(￣ε￣ԅ)"] {
  --Avad: -90deg;
}

/* --------------------
	Multiple
-------------------- */
[class*="(╹◡"][class*="ε=┌"],
[class*="(╹◡"][class*="┏("],
[class*="(≧ω"][class*="ε=┌"],
[class*="(≧ω"][class*="┏("],
[class*="(×д"][class*="ε=┌"],
[class*="(×д"][class*="┏("] {
  --ATX0: calc(var(--Avslx) * 2);
  --ATY0: calc(var(--Avsly) * 2);
  --ATX1: unset;
  --ATY1: unset;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Easing;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(^3^)"] {
  --AE: ease!important;
}

[class*="(-_-)"] {
  --AE: linear!important;
}

[class*="(*^.^*)"] {
  --AE: ease-in-out!important;
}

[class*="(*ﾉ▽ﾉ)"] {
  --AE: var(--Acirc)!important;
}

[class*="(;Ｏ;)"] {
  --AE: var(--Ain-circ)!important;
}

[class*="_(_^_)_"] {
  --AE: var(--Aout-circ)!important;
}

[class*="(T.T)"] {
  --AE: ease-in!important;
}

[class*="(＞_＜)"] {
  --AE: ease-out!important;
}

[class*="(;´・`)>"] {
  --AE: var(--Aback)!important;
}

[class*="(-_^;)"] {
  --AE: var(--Ain-back)!important;
}

[class*="(':')"] {
  --AE: var(--Aout-back)!important;
}

[class*="(・.)"] {
  --AE: var(--Aexpo)!important;
}

[class*="(;-Ｏ-A;)"] {
  --AE: var(--Ain-expo)!important;
}

[class*="(^_-)"] {
  --AE: var(--Aout-expo)!important;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Repeat (Iterator-count)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="＜°))＞≪"] {
  --AC: var(--Alc, infinite);
}

[class*="＜°))＞≪~"] {
  --Alc: 2;
}

[class*="＜°))＞≪~~"] {
  --Alc: 3;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Delay

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(－.－)"] {
  animation-delay: var(--ADL);
}

[class*="(－.－)z"] {
  --ADL: .1s;
}

[class*="(－.－)zz"] {
  --ADL: .2s;
}

[class*="(－.－)zzz"] {
  --ADL: .3s;
}

[class*="(－.－)zzzz"] {
  --ADL: .4s;
}

[class*="(－.－)zzzzz"] {
  --ADL: .5s;
}

[class*="(－.－)zzzzzz"] {
  --ADL: .6s;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Speed (Duration)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="('Д゜)y"],
[class*="(´ー`)y"] {
  --AS: var(--Als);
}

/* Up */
[class*="('Д゜)y─┛"] {
  --Als: .8;
}

[class*="('Д゜)y──┛"] {
  --Als: .6;
}

[class*="('Д゜)y───┛"] {
  --Als: .4;
}

[class*="('Д゜)y────┛"] {
  --Als: .2;
}

/* Down */
[class*="(´ー`)y-~"] {
  --Als: 1.5;
}

[class*="(´ー`)y-~~"] {
  --Als: 2;
}

[class*="(´ー`)y-~~~"] {
  --Als: 2.5;
}

[class*="(´ー`)y-~~~~"] {
  --Als: 3;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Level (Intensity)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* Up */
[class*="(-.-)=○)ﾟﾛﾟ)"] {
  --AL: 1.5;
}

[class*="(-.-)=○)ﾟﾛﾟ)☆)ﾟOﾟ)"] {
  --AL: 2;
}

[class*="(-.-)=○)ﾟﾛﾟ)☆)ﾟOﾟ)☆)ﾟ3ﾟ)"] {
  --AL: 2.5;
}

[class*="(-.-)=○)ﾟﾛﾟ)☆)ﾟOﾟ)☆)ﾟ3ﾟ))ﾟ□ﾟ)"] {
  --AL: 3;
}

/* Down */
[class*="(-.-)=○θ')"] {
  --AL: .8;
}

[class*="(-.-)=○θ')θ')"] {
  --AL: .6;
}

[class*="(-.-)=○θ')θ')θ')"] {
  --AL: .4;
}

[class*="(-.-)=○θ')θ')θ')θ')"] {
  --AL: .2;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Transform origin

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="(￣︿￣)"] {
  --AOXY: 50% 0;
}

[class*="(￣□￣」)"] {
  --AOXY: 100% 50%;
}

[class*="(＃￣ω￣)"] {
  --AOXY: 100% 0;
}

[class*="(￢_￢;)"] {
  --AOXY: 50% 100%;
}

[class*="<(￣﹌￣)>"] {
  --AOXY: 100% 100%;
}

[class*="(⇀‸↼‶)"] {
  --AOXY: 0 50%;
}

[class*="(＞ｍ＜)"] {
  --AOXY: 0 100%;
}

[class*="(.人.)"] {
  --AOXY: 0 0;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Direction

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="_(:3」∠)_"] {
  --ADR: alternate;
  --AC: 2;
}

[class*="ヽ(*'､^*)"] {
  --ADR: alternate-reverse;
  --AC: 2;
}

[class*="∠(ᐛ」∠)＿"] {
  --ADR: reverse;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	Modifier: Ascend

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
[class*="ヾ(>▽<)ゞ"],
[class*="ﾍ(^^ﾍ)"],
[class*="(=^･^=)"],
[class*="()^ω^()"],
[class*="φ(..)"] {
  animation-name: unset;
}

[class*="φ(..)"] > * {
  animation: inherit;
  animation-name: var(--AN);
}

[class*="ヾ(>▽<)ゞ"] > *,
[class*="ﾍ(^^ﾍ)"] > *,
[class*="(=^･^=)"] > *,
[class*="()^ω^()"] > * {
  animation: inherit;
  animation-name: var(--AN);
  animation-delay: calc(var(--Aord, 0) * var(--Aorv, 1) * .1s);
}

/* Ascend */
[class*="ヾ(>▽<)ゞ"] > *:nth-child(2) {
  --Aord: 1;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(3) {
  --Aord: 2;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(4) {
  --Aord: 3;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(5) {
  --Aord: 4;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(6) {
  --Aord: 5;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(7) {
  --Aord: 6;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(8) {
  --Aord: 7;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(9) {
  --Aord: 8;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(10) {
  --Aord: 9;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(11) {
  --Aord: 10;
}

[class*="ヾ(>▽<)ゞ"] > *:nth-child(12) {
  --Aord: 11;
}

/* Descend */
[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(2) {
  --Aord: 1;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(3) {
  --Aord: 2;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(4) {
  --Aord: 3;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(5) {
  --Aord: 4;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(6) {
  --Aord: 5;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(7) {
  --Aord: 6;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(8) {
  --Aord: 7;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(9) {
  --Aord: 8;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(10) {
  --Aord: 9;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(11) {
  --Aord: 10;
}

[class*="ﾍ(^^ﾍ)"] > *:nth-last-child(12) {
  --Aord: 11;
}

/*-----------------------
	Odd - Even
-----------------------*/
[class*="(=^･^=)"] > :nth-child(odd) {
  --Aord: 1;
}

[class*="()^ω^()"] > :nth-child(even) {
  --Aord: 1;
}

/*-----------------------
	Velocity
-----------------------*/
/* Up */
[class*="ヾ(>▽<)ゞヾ(▽^)ゞ"],
[class*="ﾍ(^^ﾍ)o(^^o)"] {
  --Aorv: .8;
}

[class*="ヾ(>▽<)ゞヾ(▽^)ゞヾ(>▽)ゞ"],
[class*="ﾍ(^^ﾍ)o(^^o)(o^^)o"] {
  --Aorv: .4;
}

[class*="ヾ(>▽<)ゞヾ(▽^)ゞヾ(>▽)ゞヾ(>▽<)ゞ"],
[class*="ﾍ(^^ﾍ)o(^^o)(o^^)o(ﾉ^^)ﾉ"] {
  --Aorv: .2;
}

/* Down */
[class*="ヾ(>▽<)ゞヾ(ω^)ゞ"],
[class*="ﾍ(^^ﾍ)(ﾉ^^)ﾉ"] {
  --Aorv: 1.2;
}

[class*="ヾ(>▽<)ゞヾ(ω^)ゞヾ(>ω)ゞ"],
[class*="ﾍ(^^ﾍ)(ﾉ^^)ﾉo(^^o)"] {
  --Aorv: 1.4;
}

[class*="ヾ(>▽<)ゞヾ(ω^)ゞヾ(>ω)ゞヾ(>ω<)ゞ"],
[class*="ﾍ(^^ﾍ)(ﾉ^^)ﾉo(^^o)ﾍ(^^ﾍ)"] {
  --Aorv: 1.6;
}
